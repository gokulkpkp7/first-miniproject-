/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FootballTeamManagement;

import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author jayakrishnan
 */
public class Bidding extends javax.swing.JFrame {
String sql;
String Uteam;
       int player_id=0;
       int player_age=0;
       float basevalue=0f;
       float player_rating=0f;

       dbhandler db=new dbhandler();

    /**
     * Creates new form Bidding
     */
    public Bidding(String sql1,String Uteam1) {
        initComponents();
       sql=sql1;
       Uteam=Uteam1;
       try {
                    ResultSet r = db.st.executeQuery(sql);
                    r.next();
                     player_id = r.getInt(1);
                     player_age = r.getInt(2);
                     player_rating = r.getFloat(3);
                     basevalue=2.5f+((player_rating*8.32f)-(player_age*0.23f));
                     r.close(); 
                   basebid.setText(Float.toString((basevalue)));
                   
          } catch (Exception e) {
System.out.println(e);
                } 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        bidit = new javax.swing.JButton();
        Bidamt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        basebid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        bidit.setText("Bid");
        bidit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                biditActionPerformed(evt);
            }
        });

        Bidamt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Bidamt.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Bidamt.setToolTipText("");
        Bidamt.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Offering Amount (in Million)", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), java.awt.Color.black)); // NOI18N
        Bidamt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Bidamt.setSelectionColor(new java.awt.Color(255, 51, 51));
        Bidamt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BidamtActionPerformed(evt);
            }
        });
        Bidamt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BidamtKeyPressed(evt);
            }
        });

        jLabel2.setText("Current Bid");

        basebid.setText("Bid");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(Bidamt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(bidit)))
                .addGap(0, 80, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel2)
                .addGap(44, 44, 44)
                .addComponent(basebid, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(basebid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Bidamt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(bidit)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(369, 198));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BidamtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BidamtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BidamtActionPerformed

    private void BidamtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BidamtKeyPressed
        // TODO add your handling code here:
       if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
        {
            bidded();
        }
    }//GEN-LAST:event_BidamtKeyPressed

    private void biditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_biditActionPerformed
       // float amt=Float.parseFloat(Bidamt.getText());
       //  System.out.println(amt);
        bidded();
    }//GEN-LAST:event_biditActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bidding.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bidding.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bidding.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bidding.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Bidamt;
    private javax.swing.JLabel basebid;
    private javax.swing.JButton bidit;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private void bidded() {
        
                    String dsteam =Uteam; 
                    float amt=Float.parseFloat(Bidamt.getText());                 
                    if(basevalue>amt){                    
    JOptionPane.showMessageDialog(this, "minimum bid for this player is "+basevalue);
    
                    }
                    else{                
                    String sql1=" ";
                    int status=1;
 
        try { 

            ResultSet t=db.st.executeQuery("select status from request where PLAYER_ID="+player_id+" and OFFER_FROM='"+dsteam+"' ");
            if(t.next()){
                status=t.getInt(1);
                if(status==0){
                    sql1="update request set STATUS=1 ,OFFER_AMOUNT="+amt+" where  "
                            + "PLAYER_ID="+player_id+" and OFFER_FROM='"+dsteam+"' ";
                                db.st.execute(sql1);
JOptionPane.showMessageDialog(this, "Bidding Successful  ");
                    this.dispose();

                }
                else{
JOptionPane.showMessageDialog(this, "Bidding failed !Bid most probably exists ");
                      
                    this.dispose();
                 }
            }else{
                

                     sql1 = "INSERT INTO request(PLAYER_ID,OFFER_FROM,OFFER_AMOUNT,STATUS)"
                            + " VALUES(" + player_id + ",'" + dsteam + "'," + amt + ",1)";

                    db.st.execute(sql1);
JOptionPane.showMessageDialog(this, "Bidding Successful");
                    this.dispose();
                     
            }
             
                     
                
             
        } catch (Exception e) {
System.out.println(e);
JOptionPane.showMessageDialog(this, "Error in  update/insert bidding");
                    this.dispose();
                } 
                    }
    }
}
